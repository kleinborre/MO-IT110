/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package jframes;

import classes.SystemAdministrator;
import java.util.Map;
import javax.swing.JOptionPane;

/**
 *
 * @author STUDY MODE
 */
public class LoginPage extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public LoginPage() {
        initComponents();
        getRootPane().setDefaultButton(loginButton);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        loginButton = new buttons.redButton();
        roleBox = new javax.swing.JComboBox<>();
        usernameText = new javax.swing.JTextField();
        passwordText = new javax.swing.JPasswordField();
        errorLabel = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MotorPH Payroll System");
        setMaximumSize(new java.awt.Dimension(960, 540));
        setName("loginPage"); // NOI18N
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        loginButton.setText("Login");
        loginButton.setAlignmentY(0.0F);
        loginButton.setFont(new java.awt.Font("Inter", 0, 24)); // NOI18N
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });
        getContentPane().add(loginButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 390, 150, 50));

        roleBox.setBackground(new java.awt.Color(204, 204, 204));
        roleBox.setFont(new java.awt.Font("Inter", 0, 18)); // NOI18N
        roleBox.setForeground(new java.awt.Color(102, 102, 102));
        roleBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Employee", "HR Manager", "Payroll Manager", "System Administrator" }));
        roleBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roleBoxActionPerformed(evt);
            }
        });
        getContentPane().add(roleBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 180, 320, 30));

        usernameText.setBackground(new java.awt.Color(204, 204, 204));
        usernameText.setFont(new java.awt.Font("Inter", 0, 18)); // NOI18N
        usernameText.setForeground(new java.awt.Color(102, 102, 102));
        usernameText.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        usernameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameTextActionPerformed(evt);
            }
        });
        getContentPane().add(usernameText, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 260, 320, 30));

        passwordText.setBackground(new java.awt.Color(204, 204, 204));
        passwordText.setFont(new java.awt.Font("Inter", 0, 18)); // NOI18N
        passwordText.setForeground(new java.awt.Color(102, 102, 102));
        passwordText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordTextActionPerformed(evt);
            }
        });
        passwordText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passwordTextKeyPressed(evt);
            }
        });
        getContentPane().add(passwordText, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 330, 320, 30));

        errorLabel.setFont(new java.awt.Font("Inter", 0, 14)); // NOI18N
        errorLabel.setForeground(new java.awt.Color(204, 0, 51));
        errorLabel.setToolTipText("");
        getContentPane().add(errorLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 360, 170, -1));

        background.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        background.setIcon(new javax.swing.ImageIcon("C:\\Users\\STUDY MODE\\Documents\\NetBeansProjects\\MotorPHOOP\\src\\main\\resources\\images\\Login.png")); // NOI18N
        background.setAlignmentY(0.0F);
        background.setAutoscrolls(true);
        background.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        background.setIconTextGap(0);
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void usernameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameTextActionPerformed
        // TODO add your handling code here:
        loginButton.doClick();
    }//GEN-LAST:event_usernameTextActionPerformed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        String inputUsername = usernameText.getText().trim();
        String inputPassword = new String(passwordText.getPassword()).trim();
        String selectedRole = roleBox.getSelectedItem().toString().trim();

        String formattedRole = selectedRole.replaceAll("\\s", "").toLowerCase(); 

        SystemAdministrator admin = new SystemAdministrator(0, "", "", ""); 
        Map<String, String[]> users = admin.readCSV("src/main/java/databases/Employee Details.csv");

        // Clear previous error messages before checking new input
        errorLabel.setText("");

        // Check if username is missing
        if (inputUsername.isEmpty()) {
            errorLabel.setText("Username is required!");
            return;
        }

        // Check if password is missing
        if (inputPassword.isEmpty()) {
            errorLabel.setText("Password is required!");
            return;
        }

        // Check if user exists in CSV
        if (!users.containsKey(inputUsername)) {
            errorLabel.setText("Username/Employee Number not found!");
            return;
        }

        String[] userData = users.get(inputUsername);
        String storedPassword = userData[20].trim();
        String[] storedRoles = userData[21].trim().toLowerCase().split("\\|");

        // Check if password is incorrect
        if (!storedPassword.equals(inputPassword)) {
            errorLabel.setText("Incorrect password!");
            return;
        }

        // Check if selected role is incorrect
        boolean roleMatch = false;
        for (String role : storedRoles) {
            if (role.equals(formattedRole)) {
                roleMatch = true;
                break;
            }
        }

        if (!roleMatch) {
            errorLabel.setText("Incorrect role selection!");
            return;
        }

        // If everything is correct, open the respective page
        switch (formattedRole) {
            case "employee":
                new EmployeePage().setVisible(true);
                break;
            case "hrmanager":
                new HRManagerPage().setVisible(true);
                break;
            case "payrollmanager":
                new PayrollManagerPage().setVisible(true);
                break;
            case "systemadministrator":
                new SystemAdministratorPage().setVisible(true);
                break;
        }
        dispose(); // Close login window after success
    }//GEN-LAST:event_loginButtonActionPerformed

    private void roleBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roleBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roleBoxActionPerformed

    private void passwordTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordTextActionPerformed
        // TODO add your handling code here:
        loginButton.doClick(); 
    }//GEN-LAST:event_passwordTextActionPerformed

    private void passwordTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordTextKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordTextKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private javax.swing.JLabel errorLabel;
    private buttons.redButton loginButton;
    private javax.swing.JPasswordField passwordText;
    private javax.swing.JComboBox<String> roleBox;
    private javax.swing.JTextField usernameText;
    // End of variables declaration//GEN-END:variables

    public static class setVisible {

        public setVisible(boolean b) {
        }
    }
}
