/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package jframes;

import classes.OvertimeRequest;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.List;

/**
 *
 * @author STUDY MODE
 */
public class EmployeeOvertime extends javax.swing.JFrame {
    
    private String[] employeeData;
 
    public EmployeeOvertime(String[] employeeData) {
        this.employeeData = employeeData;
        initComponents();
        loadOvertimeRequests();
        
        // Add MouseListener directly in the constructor
        overtimeTable.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                overtimeTableMouseClicked(evt);
            }
        });
    }
    
    public EmployeeOvertime() {
        initComponents();
    }
    
    private void loadOvertimeRequests() {
        OvertimeRequest overtimeRequest = new OvertimeRequest(Integer.parseInt(employeeData[0]), 0, 0, "");
        List<String[]> overtimeData = overtimeRequest.readCSV("src/main/java/databases/Overtime Requests.csv");

        DefaultTableModel model = (DefaultTableModel) overtimeTable.getModel();
        model.setRowCount(0); // Clear existing rows

        for (String[] data : overtimeData) {
            if (data[0].equals(employeeData[0])) { // Only show current employeeâ€™s requests
                model.addRow(new Object[]{data[3], data[1], data[2]});
            }
        }
    }
    
    private void overtimeTableMouseClicked(java.awt.event.MouseEvent evt) {                                        
        int row = overtimeTable.getSelectedRow();
        if (row == -1) return; // Ensure a row is selected

        String status = overtimeTable.getValueAt(row, 0).toString();
        double hours = Double.parseDouble(overtimeTable.getValueAt(row, 1).toString());
        double pay = Double.parseDouble(overtimeTable.getValueAt(row, 2).toString());

        int choice = JOptionPane.showOptionDialog(this,
            "Update or Delete this request?", "Action Required",
            JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE,
            null, new String[]{"Update", "Delete"}, "Update");

        if (choice == JOptionPane.YES_OPTION) {
            // Open update request page
            new EmployeeOvertimeRequest(employeeData, hours, pay, status).setVisible(true);
            dispose();
        } else if (choice == JOptionPane.NO_OPTION) {
            // Cancel the selected request
            OvertimeRequest request = new OvertimeRequest(Integer.parseInt(employeeData[0]), hours, pay, status);
            request.cancelOvertimeRequest();
            loadOvertimeRequests(); // Refresh table after deletion
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backButton = new buttons.whiteButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        overtimeTable = new javax.swing.JTable();
        requestButton = new buttons.grayButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("MotorPH Payroll System");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backButton.setText("Back");
        backButton.setFont(new java.awt.Font("Inter", 0, 18)); // NOI18N
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        getContentPane().add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 10, 110, 40));

        overtimeTable.setBackground(new java.awt.Color(204, 204, 204));
        overtimeTable.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        overtimeTable.setForeground(new java.awt.Color(51, 51, 51));
        overtimeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Status", "Overtime Hours", "Overtime Pay"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(overtimeTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, 840, 350));

        requestButton.setText("Submit Overtime");
        requestButton.setFont(new java.awt.Font("Inter", 0, 14)); // NOI18N
        requestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestButtonActionPerformed(evt);
            }
        });
        getContentPane().add(requestButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 470, 150, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\STUDY MODE\\Documents\\NetBeansProjects\\MotorPHOOP\\src\\main\\resources\\images\\Overtime Request.png")); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        new EmployeePage(this.employeeData).setVisible(true);
        dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    private void requestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestButtonActionPerformed
        // TODO add your handling code here:
        new EmployeeOvertimeRequest(this.employeeData).setVisible(true);
        dispose();
    }//GEN-LAST:event_requestButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeOvertime.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeOvertime.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeOvertime.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeOvertime.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeOvertime().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private buttons.whiteButton backButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable overtimeTable;
    private buttons.grayButton requestButton;
    // End of variables declaration//GEN-END:variables
}
