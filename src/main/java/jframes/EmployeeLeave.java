/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package jframes;

import classes.LeaveRequest;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.time.LocalDate;
import java.util.List;
/**
 *
 * @author STUDY MODE
 */
public class EmployeeLeave extends javax.swing.JFrame {
    
    private String[] employeeData;
    private static final String FILE_PATH = "src/main/java/databases/Leave Requests.csv";
    /**
     * Creates new form EmployeeLeave
     */
    public EmployeeLeave(String[] employeeData) {
        this.employeeData = employeeData;
        initComponents();
        loadEmployeeLeaveRequests();
        addTableClickListener();
    }
    
    public EmployeeLeave() {
        initComponents();
    }
    
    /**
     * Loads only the leave requests of the logged-in employee.
     */
    private void loadEmployeeLeaveRequests() {
        DefaultTableModel model = (DefaultTableModel) leaveTable.getModel();
        model.setRowCount(0); // Clear existing rows

        String loggedInEmployeeNumber = employeeData[0]; // Employee number of logged-in user
        LeaveRequest leaveRequest = new LeaveRequest(0, "", null, null, "");

        // Read leave requests from CSV
        List<String[]> leaveRequests = leaveRequest.readCSV(FILE_PATH);
        for (String[] record : leaveRequests) {
            if (record.length >= 6 && record[0].equals(loggedInEmployeeNumber)) { // Only show logged-in employee's requests
                model.addRow(new Object[]{
                    record[2], // Leave Type
                    record[5], // Status
                    record[3], // Start Date
                    record[4]  // End Date
                });
            }
        }
    }

    // Refresh table after submitting a request
    public void refreshTable() {
        loadEmployeeLeaveRequests();
    }
    
    /**
     * Adds a mouse listener to detect clicks on table rows.
     */
    private void addTableClickListener() {
        leaveTable.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent evt) {
                int row = leaveTable.getSelectedRow();
                if (row != -1) {
                    handleLeaveRequestAction(row);
                }
            }
        });
    }
    
    /**
     * Handles the dialog for updating or canceling a leave request.
     */
    private void handleLeaveRequestAction(int row) {
        String leaveType = leaveTable.getValueAt(row, 0).toString();
        String status = leaveTable.getValueAt(row, 1).toString();
        LocalDate startDate = LocalDate.parse(leaveTable.getValueAt(row, 2).toString());
        LocalDate endDate = LocalDate.parse(leaveTable.getValueAt(row, 3).toString());

        int employeeNumber = Integer.parseInt(employeeData[0]);
        LeaveRequest leaveRequest = new LeaveRequest(employeeNumber, leaveType, startDate, endDate, status);

        String[] options = {"Update", "Delete"};
        int choice = JOptionPane.showOptionDialog(
                this,
                "Do you want to update or delete this leave request?",
                "Leave Request Action",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                options,
                options[0]);

        if (choice == JOptionPane.YES_OPTION) { // Update
            new EmployeeLeaveRequest(employeeData, leaveRequest).setVisible(true);
            dispose();
        } else if (choice == JOptionPane.NO_OPTION) { // Cancel
            leaveRequest.deleteLeaveRequest();
            refreshTable();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backButton = new buttons.whiteButton();
        requestButton = new buttons.grayButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        leaveTable = new javax.swing.JTable();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("MotorPH Payroll System");
        setMaximumSize(new java.awt.Dimension(960, 540));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backButton.setText("Back");
        backButton.setFont(new java.awt.Font("Inter", 0, 18)); // NOI18N
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        getContentPane().add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 10, 110, 40));

        requestButton.setText("Submit Leave");
        requestButton.setFont(new java.awt.Font("Inter", 0, 14)); // NOI18N
        requestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestButtonActionPerformed(evt);
            }
        });
        getContentPane().add(requestButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 470, 150, -1));

        leaveTable.setBackground(new java.awt.Color(204, 204, 204));
        leaveTable.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        leaveTable.setForeground(new java.awt.Color(51, 51, 51));
        leaveTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Leave Type", "Status", "Start Date", "End Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(leaveTable);
        if (leaveTable.getColumnModel().getColumnCount() > 0) {
            leaveTable.getColumnModel().getColumn(0).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, 840, 350));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Leave Request.png"))); // NOI18N
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        new EmployeePage(this.employeeData).setVisible(true);
        dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    private void requestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestButtonActionPerformed
        // TODO add your handling code here:
        new EmployeeLeaveRequest(this.employeeData).setVisible(true);
        dispose();
    }//GEN-LAST:event_requestButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeLeave.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeLeave.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeLeave.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeLeave.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeLeave().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private buttons.whiteButton backButton;
    private javax.swing.JLabel background;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable leaveTable;
    private buttons.grayButton requestButton;
    // End of variables declaration//GEN-END:variables
}
