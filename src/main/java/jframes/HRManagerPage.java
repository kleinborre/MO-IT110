package jframes;

import classes.HRManager;
import classes.LeaveRequest;
import classes.OvertimeRequest;
import javax.swing.table.DefaultTableModel;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author STUDY MODE
 */
public class HRManagerPage extends javax.swing.JFrame {
    
    private String[] employeeData;
    /**
     * Creates new form HRManagerPage
     */
    public HRManagerPage() {
        initComponents();
        populateEmployeeInfo();
        loadLeaveRequests();
        loadOvertimeRequests();
    }
    
    public HRManagerPage(String[] employeeData) {
        this.employeeData = employeeData;
        initComponents();
        populateEmployeeInfo();
        loadLeaveRequests();
        loadOvertimeRequests();
    }
    
    // Method to populate employee information on the GUI
    private void populateEmployeeInfo() {
        if (employeeData == null || employeeData.length != 22) {
            System.out.println("Error: Incorrect employee data format.");
            return;
        }

        nameProfileLabel.setText(employeeData[2] + " " + employeeData[1]);
        positionProfileLabel.setText(employeeData[11]);
    }
    
    /**
     * Loads all Leave Requests into hrManagerLeaveTable.
     */
    private void loadLeaveRequests() {
        DefaultTableModel model = (DefaultTableModel) hrManagerLeaveTable.getModel();
        model.setRowCount(0);

        List<String[]> leaveRequests = LeaveRequest.getAllLeaveRequests();
        for (String[] request : leaveRequests) {
            model.addRow(new Object[]{
                request[0], // Employee Number
                request[1], // Name
                request[2], // Leave Type
                request[3], // Start Date
                request[4], // End Date
                request[5]  // Status
            });
        }
    }

    private void loadOvertimeRequests() {
        DefaultTableModel model = (DefaultTableModel) hrManagerOvertimeTable.getModel();
        model.setRowCount(0);

        List<String[]> overtimeRequests = OvertimeRequest.getAllOvertimeRequests();
        for (String[] request : overtimeRequests) {
            model.addRow(new Object[]{
                request[0], // Employee Number
                request[1], // Name
                request[2], // Date
                request[3], // Overtime Hours
                request[4], // Overtime Pay
                request[5]  // Status
            });
        }
    }

    /**
     * Call these methods when the HR Manager page opens
     */
    private void formWindowOpened(java.awt.event.WindowEvent evt) {                                  
        loadLeaveRequests();
        loadOvertimeRequests();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        logoutButton = new buttons.whiteButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        hrManagerLeaveTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        hrManagerOvertimeTable = new javax.swing.JTable();
        approveOvertimeRequestButton = new buttons.redButton();
        rejectOvertimeRequestButton = new buttons.grayButton();
        approveLeaveRequestButton1 = new buttons.redButton();
        rejectLeaveRequestButton1 = new buttons.grayButton();
        employeeAttendanceButton = new buttons.redButton();
        employeeRoleButton = new buttons.grayButton();
        nameProfileLabel = new javax.swing.JLabel();
        positionProfileLabel = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("MotorPH Payroll System");
        setMaximumSize(new java.awt.Dimension(960, 540));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Inter", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("Employees Overtime Request List");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 330, -1, -1));

        logoutButton.setText("Logout");
        logoutButton.setFont(new java.awt.Font("Inter", 0, 18)); // NOI18N
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });
        getContentPane().add(logoutButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 10, 110, 40));

        jLabel3.setFont(new java.awt.Font("Inter", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Employees Leave Request List");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 100, -1, -1));

        jScrollPane1.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N

        hrManagerLeaveTable.setBackground(new java.awt.Color(204, 204, 204));
        hrManagerLeaveTable.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        hrManagerLeaveTable.setForeground(new java.awt.Color(51, 51, 51));
        hrManagerLeaveTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Employee Number", "Name", "Leave Type", "Start Date", "End Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(hrManagerLeaveTable);
        if (hrManagerLeaveTable.getColumnModel().getColumnCount() > 0) {
            hrManagerLeaveTable.getColumnModel().getColumn(1).setHeaderValue("Name");
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 130, 620, 100));

        jScrollPane2.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N

        hrManagerOvertimeTable.setBackground(new java.awt.Color(204, 204, 204));
        hrManagerOvertimeTable.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        hrManagerOvertimeTable.setForeground(new java.awt.Color(51, 51, 51));
        hrManagerOvertimeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Employee Number", "Name", "Date", "Overtime Hours", "Overtime Pay", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(hrManagerOvertimeTable);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 360, 630, 100));

        approveOvertimeRequestButton.setText("Approve Overtime");
        approveOvertimeRequestButton.setFont(new java.awt.Font("Inter", 0, 14)); // NOI18N
        approveOvertimeRequestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveOvertimeRequestButtonActionPerformed(evt);
            }
        });
        getContentPane().add(approveOvertimeRequestButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 470, 160, -1));

        rejectOvertimeRequestButton.setText("Reject Overtime");
        rejectOvertimeRequestButton.setFont(new java.awt.Font("Inter", 0, 14)); // NOI18N
        rejectOvertimeRequestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejectOvertimeRequestButtonActionPerformed(evt);
            }
        });
        getContentPane().add(rejectOvertimeRequestButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 470, 160, -1));

        approveLeaveRequestButton1.setText("Approve Leave");
        approveLeaveRequestButton1.setFont(new java.awt.Font("Inter", 0, 14)); // NOI18N
        approveLeaveRequestButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveLeaveRequestButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(approveLeaveRequestButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 240, 160, -1));

        rejectLeaveRequestButton1.setText("Reject Leave");
        rejectLeaveRequestButton1.setFont(new java.awt.Font("Inter", 0, 14)); // NOI18N
        rejectLeaveRequestButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejectLeaveRequestButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(rejectLeaveRequestButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 240, 160, -1));

        employeeAttendanceButton.setText("Employees Attendance");
        employeeAttendanceButton.setAlignmentY(0.0F);
        employeeAttendanceButton.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        employeeAttendanceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employeeAttendanceButtonActionPerformed(evt);
            }
        });
        getContentPane().add(employeeAttendanceButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 280, 180, 40));

        employeeRoleButton.setText("Switch to Employee Role");
        employeeRoleButton.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        employeeRoleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employeeRoleButtonActionPerformed(evt);
            }
        });
        getContentPane().add(employeeRoleButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 200, 40));

        nameProfileLabel.setFont(new java.awt.Font("Inter", 0, 14)); // NOI18N
        nameProfileLabel.setForeground(new java.awt.Color(102, 102, 102));
        nameProfileLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameProfileLabel.setText("Name");
        getContentPane().add(nameProfileLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(59, 230, 140, -1));

        positionProfileLabel.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        positionProfileLabel.setForeground(new java.awt.Color(102, 102, 102));
        positionProfileLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        positionProfileLabel.setText("Position");
        positionProfileLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(positionProfileLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, 200, -1));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/HR Dashboard.png"))); // NOI18N
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 960, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        int confirm = JOptionPane.showConfirmDialog(
            this,
            "Do you really want to log out of your session?",
            "MotorPH Payroll System - Confirm Logout",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE
        );

        if (confirm == JOptionPane.YES_OPTION) {
            new LoginPage().setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_logoutButtonActionPerformed

    private void approveOvertimeRequestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveOvertimeRequestButtonActionPerformed
        int row = hrManagerOvertimeTable.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Please select an overtime request to approve.");
            return;
        }

        int employeeNumber = Integer.parseInt(hrManagerOvertimeTable.getValueAt(row, 0).toString());
        String date = hrManagerOvertimeTable.getValueAt(row, 2).toString();

        HRManager.approveOvertimeRequest(employeeNumber, date);

        JOptionPane.showMessageDialog(this, "Overtime request approved.");
        loadOvertimeRequests();
    }//GEN-LAST:event_approveOvertimeRequestButtonActionPerformed

    private void rejectOvertimeRequestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectOvertimeRequestButtonActionPerformed
        int row = hrManagerOvertimeTable.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Please select an overtime request to reject.");
            return;
        }

        int employeeNumber = Integer.parseInt(hrManagerOvertimeTable.getValueAt(row, 0).toString());
        String date = hrManagerOvertimeTable.getValueAt(row, 2).toString();

        HRManager.rejectOvertimeRequest(employeeNumber, date);

        JOptionPane.showMessageDialog(this, "Overtime request rejected.");
        loadOvertimeRequests();
    }//GEN-LAST:event_rejectOvertimeRequestButtonActionPerformed

    private void approveLeaveRequestButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveLeaveRequestButton1ActionPerformed
        int row = hrManagerLeaveTable.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Please select a leave request to approve.");
            return;
        }

        int employeeNumber = Integer.parseInt(hrManagerLeaveTable.getValueAt(row, 0).toString());
        String leaveType = hrManagerLeaveTable.getValueAt(row, 2).toString();
        String startDate = hrManagerLeaveTable.getValueAt(row, 3).toString();

        HRManager.approveLeaveRequest(employeeNumber, leaveType, startDate);

        JOptionPane.showMessageDialog(this, "Leave request approved.");
        loadLeaveRequests();
    }//GEN-LAST:event_approveLeaveRequestButton1ActionPerformed

    private void rejectLeaveRequestButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectLeaveRequestButton1ActionPerformed
        int row = hrManagerLeaveTable.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Please select a leave request to reject.");
            return;
        }

        int employeeNumber = Integer.parseInt(hrManagerLeaveTable.getValueAt(row, 0).toString());
        String leaveType = hrManagerLeaveTable.getValueAt(row, 2).toString();
        String startDate = hrManagerLeaveTable.getValueAt(row, 3).toString();

        HRManager.rejectLeaveRequest(employeeNumber, leaveType, startDate);

        JOptionPane.showMessageDialog(this, "Leave request rejected.");
        loadLeaveRequests();
    }//GEN-LAST:event_rejectLeaveRequestButton1ActionPerformed

    private void employeeAttendanceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employeeAttendanceButtonActionPerformed
        // TODO add your handling code here:
        new HRManagerAttendance(employeeData).setVisible(true);
        dispose();
    }//GEN-LAST:event_employeeAttendanceButtonActionPerformed

    private void employeeRoleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employeeRoleButtonActionPerformed
        if (employeeData != null) {
            new EmployeePage(employeeData).setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_employeeRoleButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HRManagerPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HRManagerPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HRManagerPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HRManagerPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HRManagerPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private buttons.redButton approveLeaveRequestButton1;
    private buttons.redButton approveOvertimeRequestButton;
    private javax.swing.JLabel background;
    private buttons.redButton employeeAttendanceButton;
    private buttons.grayButton employeeRoleButton;
    private javax.swing.JTable hrManagerLeaveTable;
    private javax.swing.JTable hrManagerOvertimeTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private buttons.whiteButton logoutButton;
    private javax.swing.JLabel nameProfileLabel;
    private javax.swing.JLabel positionProfileLabel;
    private buttons.grayButton rejectLeaveRequestButton1;
    private buttons.grayButton rejectOvertimeRequestButton;
    // End of variables declaration//GEN-END:variables
}
